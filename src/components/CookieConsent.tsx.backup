"use client";

import { useState, useEffect } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { Cookie, X, Settings, Check, Sparkles } from "lucide-react";
import Link from "next/link";

const CONSENT_KEY = "cookie-consent";

interface CookieConsentProps {
  companyName?: string;
  privacyPolicyUrl?: string;
}

export default function CookieConsent({
  companyName = "AI Resume Builder",
  privacyPolicyUrl = "/privacy",
}: CookieConsentProps) {
  const [showBanner, setShowBanner] = useState(false);
  const [showCustomize, setShowCustomize] = useState(false);
  const [preferences, setPreferences] = useState({
    necessary: true, // Always true
    analytics: false,
    marketing: false,
  });

  useEffect(() => {
    const consent = localStorage.getItem(CONSENT_KEY);
    if (!consent) {
      // Show banner after a short delay
      const timer = setTimeout(() => setShowBanner(true), 1000);
      return () => clearTimeout(timer);
    }
  }, []);

  const handleAcceptAll = () => {
    const consent = {
      necessary: true,
      analytics: true,
      marketing: true,
      timestamp: new Date().toISOString(),
    };
    localStorage.setItem(CONSENT_KEY, JSON.stringify(consent));
    setShowBanner(false);
    
    // Initialize analytics here
    if (typeof window !== "undefined") {
      // window.gtag?.("consent", "update", { analytics_storage: "granted" });
    }
  };

  const handleDeclineAll = () => {
    const consent = {
      necessary: true,
      analytics: false,
      marketing: false,
      timestamp: new Date().toISOString(),
    };
    localStorage.setItem(CONSENT_KEY, JSON.stringify(consent));
    setShowBanner(false);
  };

  const handleSavePreferences = () => {
    const consent = {
      ...preferences,
      timestamp: new Date().toISOString(),
    };
    localStorage.setItem(CONSENT_KEY, JSON.stringify(consent));
    setShowBanner(false);
    
    // Update analytics consent
    if (typeof window !== "undefined" && preferences.analytics) {
      // window.gtag?.("consent", "update", { analytics_storage: "granted" });
    }
  };

  return (
    <AnimatePresence>
      {showBanner && (
        <motion.div
          initial={{ y: 100, opacity: 0, scale: 0.9 }}
          animate={{ y: 0, opacity: 1, scale: 1 }}
          exit={{ y: 100, opacity: 0, scale: 0.9 }}
          transition={{ type: "spring", damping: 25, stiffness: 300 }}
          className="fixed bottom-6 left-6 right-6 md:left-auto md:right-6 md:max-w-sm z-50"
        >
          <div className="relative bg-gradient-to-br from-white via-purple-50/50 to-pink-50/50 dark:from-gray-900 dark:via-purple-950/30 dark:to-pink-950/30 backdrop-blur-xl border-2 border-purple-200/50 dark:border-purple-800/50 rounded-2xl shadow-2xl shadow-purple-500/20 dark:shadow-purple-900/40 overflow-hidden">
              {/* Main Banner */}
              <div className="p-6 md:p-8">
                <div className="flex items-start gap-4">
                  {/* Icon */}
                  <div className="flex-shrink-0 w-12 h-12 rounded-full bg-gradient-to-br from-pink-500 to-orange-500 flex items-center justify-center">
                    <Cookie className="w-6 h-6 text-white" />
                  </div>

                  {/* Content */}
                  <div className="flex-1 min-w-0">
                    <h3 className="text-lg md:text-xl font-bold text-gray-900 dark:text-white mb-2">
                      We value your privacy
                    </h3>
                    <p className="text-sm md:text-base text-gray-600 dark:text-gray-400 mb-4">
                      We use cookies to enhance your browsing experience, serve personalized content, and analyze our traffic. 
                      By clicking "Accept All", you consent to our use of cookies.{" "}
                      <Link 
                        href={privacyPolicyUrl}
                        className="text-pink-600 dark:text-pink-400 hover:underline font-medium"
                      >
                        Read our Privacy Policy
                      </Link>
                    </p>

              {/* Customize section */}
              <AnimatePresence>
                {showCustomize && (
                  <motion.div
                    initial={{ height: 0, opacity: 0 }}
                    animate={{ height: 'auto', opacity: 1 }}
                    exit={{ height: 0, opacity: 0 }}
                    transition={{ duration: 0.3 }}
                    className="overflow-hidden"
                  >
                    <div className="space-y-2 py-3 border-t border-purple-200/50 dark:border-purple-800/50">
                      {[
                        { label: 'üç™ Essential', desc: 'Required for the site to function', enabled: true, disabled: true },
                        { label: 'üìä Analytics', desc: 'Help us improve our service', enabled: preferences.analytics, disabled: false, key: 'analytics' },
                        { label: 'üéØ Marketing', desc: 'Personalized content & ads', enabled: preferences.marketing, disabled: false, key: 'marketing' }
                      ].map((item, index) => (
                        <motion.label
                          key={index}
                          initial={{ x: -20, opacity: 0 }}
                          animate={{ x: 0, opacity: 1 }}
                          transition={{ delay: index * 0.1 }}
                          className="flex items-center justify-between gap-2 p-2 hover:bg-white/50 dark:hover:bg-gray-800/50 rounded-lg cursor-pointer transition-colors"
                        >
                          <div className="flex-1">
                            <div className="text-xs font-semibold text-gray-900 dark:text-white">{item.label}</div>
                            <div className="text-[10px] text-gray-500 dark:text-gray-500">{item.desc}</div>
                          </div>
                          <input
                            type="checkbox"
                            checked={item.enabled}
                            disabled={item.disabled}
                            onChange={(e) => {
                              if (item.key) {
                                setPreferences({ ...preferences, [item.key]: e.target.checked });
                              }
                            }}
                            className="w-4 h-4 text-purple-600 bg-gray-100 border-gray-300 rounded focus:ring-purple-500 dark:focus:ring-purple-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600"
                          />
                        </motion.label>
                      ))}
                    </div>
                  </motion.div>
                )}
              </AnimatePresence>

              {/* Action buttons */}
              <div className="flex flex-col gap-2 mt-4">
                {showCustomize ? (
                  <div className="flex gap-2">
                    <motion.button
                      whileHover={{ scale: 1.02 }}
                      whileTap={{ scale: 0.98 }}
                      onClick={() => setShowCustomize(false)}
                      className="flex-1 px-3 py-2 text-xs font-semibold text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700 rounded-lg transition-colors"
                    >
                      Cancel
                    </motion.button>
                    <motion.button
                      whileHover={{ scale: 1.02 }}
                      whileTap={{ scale: 0.98 }}
                      onClick={handleSavePreferences}
                      className="flex-1 px-3 py-2 text-xs font-semibold text-white bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 rounded-lg shadow-lg shadow-purple-500/30 transition-all flex items-center justify-center gap-1.5"
                    >
                      <Check className="w-3.5 h-3.5" />
                      Save Preferences
                    </motion.button>
                  </div>
                ) : (
                  <>
                    <motion.button
                      whileHover={{ scale: 1.02, y: -1 }}
                      whileTap={{ scale: 0.98 }}
                      onClick={handleAcceptAll}
                      className="w-full px-4 py-2.5 text-xs font-bold text-white bg-gradient-to-r from-purple-600 via-pink-600 to-orange-500 hover:from-purple-700 hover:via-pink-700 hover:to-orange-600 rounded-lg shadow-lg shadow-purple-500/40 hover:shadow-xl hover:shadow-pink-500/50 transition-all"
                    >
                      üç™ Accept All Cookies
                    </motion.button>
                    <div className="flex gap-2">
                      <motion.button
                        whileHover={{ scale: 1.02 }}
                        whileTap={{ scale: 0.98 }}
                        onClick={() => setShowCustomize(true)}
                        className="flex-1 px-3 py-2 text-xs font-semibold text-purple-700 dark:text-purple-300 bg-purple-100 dark:bg-purple-900/30 hover:bg-purple-200 dark:hover:bg-purple-900/50 rounded-lg transition-colors flex items-center justify-center gap-1.5"
                      >
                        <Settings className="w-3.5 h-3.5" />
                        Customize
                      </motion.button>
                      <motion.button
                        whileHover={{ scale: 1.02 }}
                        whileTap={{ scale: 0.98 }}
                        onClick={handleDeclineAll}
                        className="flex-1 px-3 py-2 text-xs font-semibold text-gray-600 dark:text-gray-400 bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700 rounded-lg transition-colors"
                      >
                        Decline All
                      </motion.button>
                    </div>
                  </>
                )}
              </div>

              {/* Fun tagline */}
              <motion.p
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 0.5 }}
                className="text-[10px] text-center text-gray-400 dark:text-gray-600 mt-3 italic"
              >
                Made with üíú and definitely not tracking your cat videos üò∏
              </motion.p>
            </div>
          </div>
        </motion.div>
      )}
    </AnimatePresence>
  );
}
